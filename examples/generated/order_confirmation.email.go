// Code generated by mailc. DO NOT EDIT.
// Version: mailc DEBUG

package emails

import (
	"bytes"
	"fmt"
	htmltemplate "html/template"
	texttemplate "text/template"
)

type OrderConfirmationEmailOrder struct {
	ID        int
	Name      string
	Qty       int
	CreatedAt string
}

type OrderConfirmationEmailUser struct {
	Name string
}

type OrderConfirmationEmailData struct {
	Order OrderConfirmationEmailOrder
	User  OrderConfirmationEmailUser
}

type OrderConfirmationEmailResult struct {
	Subject string
	HTML    string
}

const orderConfirmationEmailHTMLTemplate = `<html>

<head>
    <meta charset="UTF-8">
    <title>Order Confirmation</title>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
</head>

<body>
    <h1>Welcome, {{ .User.Name}}!</h1>
    <p>Your recent order details are below:</p>
    <table>
        <tr>
            <th>Order ID</th>
            <th>Product Name</th>
            <th>Qty</th>
            <th>Placed At</th>
        </tr>
        <tr>
            <td>{{ .Order.ID}}</td>
            <td>{{ .Order.Name}}</td>
            <td>{{ .Order.Qty}}</td>
            <td>{{ .Order.CreatedAt}}</td>
        </tr>
    </table>
    <p>Thanks for choosing us!</p>
</body>

</html>`
const orderConfirmationEmailSubjectTemplate = `Welcome {{ .User.Name}} â€“ Order #{{ .Order.ID}} placed {{ .Order.CreatedAt}}`

func OrderConfirmationEmail(data *OrderConfirmationEmailData) (result OrderConfirmationEmailResult, err error) {
	bodyTmpl, err := htmltemplate.New("order_confirmation").Parse(orderConfirmationEmailHTMLTemplate)
	if err != nil {
		return result, fmt.Errorf("parse body template: %w", err)
	}

	var bodyBuf bytes.Buffer
	if err := bodyTmpl.Execute(&bodyBuf, data); err != nil {
		return result, fmt.Errorf("render body: %w", err)
	}

	result.HTML = bodyBuf.String()

	subjTmpl, err := texttemplate.New("order_confirmation_subject").Parse(orderConfirmationEmailSubjectTemplate)
	if err != nil {
		return result, fmt.Errorf("parse subject template: %w", err)
	}

	var subjBuf bytes.Buffer
	if err := subjTmpl.Execute(&subjBuf, data); err != nil {
		return result, fmt.Errorf("render subject: %w", err)
	}

	result.Subject = subjBuf.String()
	return result, nil
}
